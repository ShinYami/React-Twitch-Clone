{"version":3,"sources":["Components/Header/IconeTwitch.svg","Components/Header/Search.svg","Components/Header/MenuIco.svg","Components/Header/Croix.svg","Components/Header/Header.jsx","api.js","Components/Sidebar/Sidebar.jsx","Components/Games/Games.jsx","Components/TopStreams/TopStreams.jsx","Components/Live/Live.jsx","Components/GameStreams/GameStreams.jsx","Components/Erreur/Erreur.jsx","Components/Resultats/Resultats.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","menu","showMenu","smallScreen","setSmallScreen","searchInput","setSearch","useEffect","mediaQuery","window","matchMedia","addListener","handleMediaQueryChange","removeListener","matches","hideMenu","className","onClick","to","src","logo","alt","onSubmit","e","preventDefault","required","value","onChange","target","handleKeyPress","type","pathname","search","croix","menuIco","api","axio","create","headers","Authorization","Sidebar","topStreams","setTopStreams","a","get","result","dataArray","data","console","log","gameIDs","map","stream","game_id","userIDs","user_id","queryParamsGame","queryParamsUsers","id","urlFinalGames","urlFinalUsers","gamesNames","getUsers","gamesNameArray","arrayUsers","finalArray","gamesName","truePic","login","forEach","name","user","profile_image_url","slice","fetchData","index","user_name","viewer_count","Games","games","setGames","game","newUrl","box_art_url","replace","state","gameID","TopStreams","channels","setChannels","thumbnail_url","channel","Live","slug","useParams","infoStream","setInfoStream","infoGame","setInfoGame","length","title","gameid","resultNomGame","nomJeu","gameName","height","width","language","GameStreams","location","useLocation","streamData","setStreamData","viewers","setViewers","newURL","totalViewers","reduce","acc","val","finalUrl","getUsersLogin","userLoginArray","Erreur","Resultats","setResult","streamerInfo","setStreamerInfo","cleanSearch","display_name","description","App","basename","process","exact","path","component","TopStream","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d663306.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/IconeTwitch.72d35b74.svg\";","export default __webpack_public_path__ + \"static/media/Search.240e946d.svg\";","export default __webpack_public_path__ + \"static/media/MenuIco.e783931c.svg\";","export default __webpack_public_path__ + \"static/media/Croix.2b9b9747.svg\";","import React, {useState, useEffect} from 'react';\nimport logo from './IconeTwitch.svg'\nimport search from './Search.svg'\nimport menuIco from './MenuIco.svg'\nimport croix from './Croix.svg'\nimport {Link} from 'react-router-dom';\n\nfunction Header(){\n\n    const [menu, showMenu] = useState(false);\n    const [smallScreen, setSmallScreen] = useState(false);\n    const [searchInput, setSearch] = useState('');\n\n    useEffect(() => {\n\n\n        const mediaQuery = window.matchMedia(\"(max-width: 900px)\");\n        mediaQuery.addListener(handleMediaQueryChange);\n        handleMediaQueryChange(mediaQuery);\n\n        return () => {\n            mediaQuery.removeListener(handleMediaQueryChange);\n        }\n\n    })\n\n    const handleMediaQueryChange = mediaQuery => {\n        if(mediaQuery.matches) {\n            setSmallScreen(true);\n        } else {\n            setSmallScreen(false);\n        }\n    }\n\n    const toggleNavRes = () => {\n        showMenu(!menu);\n    }\n\n    const hideMenu = () => {\n\n        if(menu === true) {\n            showMenu(!menu);\n        }\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    const handleKeyPress = (e) => {\n        setSearch(e.target.value);\n    }\n\n\n    return (\n        <div>\n\n            <nav className=\"headerTop\">\n                {(menu || !smallScreen) && (\n\n          \n                <ul className=\"listeMenu\">\n\n                    <li onClick={hideMenu} className=\"liensNav\">\n                        <Link className=\"link\" to=\"/\">\n                          <img src={logo} alt=\"logo twitch\" className=\"logo\"/>\n                        </Link>\n                    </li>\n                    <li onClick={hideMenu} className=\"liensNav\">\n                        <Link className=\"link\" to=\"/\">\n                          Top Games\n                        </Link>\n                    </li>\n                    <li onClick={hideMenu} className=\"liensNav\">\n                         <Link className=\"link\" to=\"/top-streams\">\n                             Top Streams\n                         </Link>\n                    </li>\n                    <li className=\"liensNav\">\n                        <form className=\"formSubmit\" onSubmit={handleSubmit}>\n\n                            <input required value={searchInput} onChange={(e) => handleKeyPress(e)} type=\"text\" className=\"inputRecherche\"/>\n\n                        <Link\n                        className=\"link\"\n                        to={{\n                            pathname: `/resultats/${searchInput}`\n                        }}\n                        >\n                            <button type=\"submit\">\n                                <img src={search} alt=\"icone loupe\" className=\"logoLoupe\"/>\n                            </button>\n                        </Link>\n                        </form>\n                    </li>\n\n                </ul>\n\n            )}\n\n            </nav>\n\n        <div className=\"menuResBtn\">\n            <img onClick={toggleNavRes} src={!menu ? menuIco : croix} alt=\"icone menu responsive\" className=\"menuIco\"/>\n        </div>\n\n        </div>\n    )\n}\n\nexport default Header","import axio from \"axios\";\n\nlet api = axio.create({\n  headers: {\n    \"Client-ID\": \"kfo9ps5bzfxcy7mk911va14758rjq5\",\n    Authorization: \"Bearer dbi4k43pf6sjhr0j9mqmbsuxo3y5mq\",\n  },\n});\n\n/*\n    \n    CLIENT_ID = kfo9ps5bzfxcy7mk911va14758rjq5\n    REDIRECT = 'https://127.0.0.1/'\n    LIEN AUTH = https://id.twitch.tv/oauth2/authorize?client_id=kfo9ps5bzfxcy7mk911va14758rjq5&redirect_uri=https://127.0.0.1/&response_type=token\n\n    LIEN REMPLI = https://id.twitch.tv/oauth2/authorize?client_id=kfo9ps5bzfxcy7mk911va14758rjq5&redirect_uri=https://127.0.0.1/&response_type=token\n\n*/\n\nexport default api;\n","import React, {useState,useEffect} from 'react';\nimport api from '../../api';\nimport {Link} from 'react-router-dom';\n\nconst Sidebar = () => {\n\n    const [topStreams, setTopStreams] = useState([])\n\n    useEffect(() => {\n\n        const fetchData = async() => {\n            const result = await api.get(\"https://api.twitch.tv/helix/streams\");\n\n            let dataArray = result.data.data;\n            console.log(dataArray);\n\n            let gameIDs = dataArray.map(stream => {\n                return stream.game_id;\n            })\n            let userIDs = dataArray.map(stream => {\n                return stream.user_id;\n            })\n            //console.log(gameIDs, userIDs)\n\n            //Url perso\n\n            let baseUrlGames = \"https://api.twitch.tv/helix/games?\";\n            let baseUrlUsers = \"https://api.twitch.tv/helix/users?\";\n\n            let queryParamsGame = \"\";\n            let queryParamsUsers = \"\";\n\n            gameIDs.map(id => {\n                return (queryParamsGame = queryParamsGame + `id=${id}&`)\n            })\n            userIDs.map(id => {\n                return (queryParamsUsers = queryParamsUsers + `id=${id}&`)\n            })\n\n            //url \n            let urlFinalGames = baseUrlGames + queryParamsGame;\n            let urlFinalUsers = baseUrlUsers + queryParamsUsers;\n\n            //console.log(urlFinalGames, urlFinalUsers);\n\n            let gamesNames = await api.get(urlFinalGames);\n            let getUsers = await api.get(urlFinalUsers);\n\n            let gamesNameArray = gamesNames.data.data;\n            let arrayUsers = getUsers.data.data;\n            //console.log(arrayUsers, gamesNameArray);\n\n            //table\n            let finalArray = dataArray.map(stream => {\n\n                stream.gamesName = \"\";\n                stream.truePic = \"\";\n                stream.login = \"\";\n\n                gamesNameArray.forEach(name => {\n                    arrayUsers.forEach(user => {\n                        if(stream.user_id === user.id && stream.game_id === name.id) {\n                            stream.truePic = user.profile_image_url;\n                            stream.gamesName = name.name;\n                            stream.login = user.login;\n                        }\n                    })\n                });\n\n                return stream;\n            })\n            setTopStreams(finalArray.slice(0,7));\n        }\n        fetchData();\n    }, [])\n\n    //console.log(topStreams);\n\n    return (\n        <div className=\"sidebar\">\n            <h2 className=\"titreSidebar\">Chaînes Recommandées</h2>\n            <ul className=\"listeStream\">\n                \n                {topStreams.map((stream,index) => (\n                    <Link className=\"link\" key={index}  to={{pathname:`/live/${stream.login}`}}>\n                    <li className=\"containerFlexSidebar\">\n\n                        <img src={stream.truePic} alt=\"streamer logo\" className=\"profilePicRonde\" />\n\n                        <div className=\"streamUser\">{stream.user_name}</div>\n\n                        <div className=\"viewerRight\">\n                            <div className=\"live\"></div>\n                            <div>{stream.viewer_count}</div>\n                        </div>\n\n                        <div className=\"gameNameSidebar\">{stream.gamesName}</div>\n\n                    </li>\n                    </Link>\n                ))}\n\n\n            </ul>\n            \n        </div>\n    );\n};\n\nexport default Sidebar;","import React, { useState, useEffect } from \"react\";\nimport api from \"../../api\";\nimport {Link} from 'react-router-dom';\n\nconst Games = () => {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/games/top\");\n      // console.log(result);\n\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map((game) => {\n        let newUrl = game.box_art_url\n          .replace(\"{width}\", \"250\")\n          .replace(\"{height}\", \"300\");\n        game.box_art_url = newUrl;\n        return game;\n      });\n\n      setGames(finalArray);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"titreGames\">Jeux les plus populaires</h1>\n\n      <div className=\"flexAccueil\">\n        {games.map((game, index) => (\n          <div key={index} className=\"carteGames\">\n            <div className=\"bgCard\">\n              <img\n                src={game.box_art_url}\n                alt=\"jeu profile pic\"\n                className=\"imgCarte\"\n              />\n            </div>\n            <div className=\"cardBodyGames\">\n              <h5 className=\"titreCartesGames\">{game.name}</h5>\n            <Link className=\"link\" to={{pathname:\"game/\"+game.name, state: {gameID: game.id}}}>\n              <div className=\"btnCarte\">Regarder {game.name}</div>\n            </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Games;\n","import React, {useEffect, useState} from 'react';\nimport api from '../../api';\nimport {Link} from 'react-router-dom';\n\nconst TopStreams = () => {\n\n    const [channels, setChannels] = useState([]);\n    useEffect(() => {\n\n        const fetchData = async() => {\n            const result = await api.get(\"https://api.twitch.tv/helix/streams\");\n\n            let dataArray = result.data.data;\n            console.log(dataArray);\n\n            let gameIDs = dataArray.map(stream => {\n                return stream.game_id;\n            })\n            let userIDs = dataArray.map(stream => {\n                return stream.user_id;\n            })\n            //console.log(gameIDs, userIDs)\n\n            //Url perso\n\n            let baseUrlGames = \"https://api.twitch.tv/helix/games?\";\n            let baseUrlUsers = \"https://api.twitch.tv/helix/users?\";\n\n            let queryParamsGame = \"\";\n            let queryParamsUsers = \"\";\n\n            gameIDs.map(id => {\n                return (queryParamsGame = queryParamsGame + `id=${id}&`)\n            })\n            userIDs.map(id => {\n                return (queryParamsUsers = queryParamsUsers + `id=${id}&`)\n            })\n\n            //url \n            let urlFinalGames = baseUrlGames + queryParamsGame;\n            let urlFinalUsers = baseUrlUsers + queryParamsUsers;\n\n            //console.log(urlFinalGames, urlFinalUsers);\n\n            let gamesNames = await api.get(urlFinalGames);\n            let getUsers = await api.get(urlFinalUsers);\n\n            let gamesNameArray = gamesNames.data.data;\n            let arrayUsers = getUsers.data.data;\n            //console.log(arrayUsers, gamesNameArray);\n\n            //table\n            let finalArray = dataArray.map(stream => {\n\n                stream.gamesName = \"\";\n                stream.login = \"\";\n\n                gamesNameArray.forEach(name => {\n                    arrayUsers.forEach(user => {\n                        if(stream.user_id === user.id && stream.game_id === name.id) {\n                            stream.truePic = user.profile_image_url;\n                            stream.gamesName = name.name;\n                            stream.login = user.login;\n                        }\n                    })\n                });\n                let newUrl = stream.thumbnail_url\n                .replace('{width}', '320')\n                .replace('{height}', '180');\n                stream.thumbnail_url = newUrl;\n                return stream;\n            })\n            setChannels(finalArray);\n        }\n        fetchData();\n    }, [])\n    return (\n        <div>\n            <h1 className=\"titreGames\">Stream Populaires</h1>\n            <div className=\"flexAccueil\">\n\n                {channels.map((channel,index) => (\n                    <div key={index} className=\"carteStream\">\n                        <div className=\"bgCard\">\n                        <img className=\"imgCarte\" src={channel.thumbnail_url} alt=\"game pic\" />\n                        </div>\n                        <div className=\"cardBodyStream\">\n                            <h5 className=\"titreCartesStream\">{channel.user_name}</h5>\n                            <p className=\"txtStream\">Jeu : {channel.gamesName}</p>\n                            <p className=\"txtStream viewers\">Viewers : {channel.viewer_count}</p>\n                            <Link className=\"link\" to={{pathname:`/live/${channel.login}`}}>\n                            <div className=\"btnCarte\">Regarder {channel.user_name}</div>\n                            </Link>\n                        </div>\n                    </div>\n                ))}\n\n            </div>\n        </div>\n    );\n};\n\nexport default TopStreams;","import React, {useState,useEffect} from 'react';\nimport ReactTwitchEmbedVideo from 'react-twitch-embed-video'\nimport {useParams} from 'react-router-dom'\nimport api from \"../../api\"\n\nconst Live = () => {\n\n    let {slug} = useParams();\n    console.log(slug);\n\n    const [infoStream, setInfoStream] = useState([]);\n    const [infoGame, setInfoGame] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await api.get(`https://api.twitch.tv/helix/streams?user_login=${slug}`)\n            //console.log(result);\n\n            if(result.data.data.length === 0) {\n                setInfoStream({title: \"Le streamer est Offline.\"})\n            } else {\n            \n            let gameID = result.data.data.map(gameid => {\n                return gameid.game_id;\n            })\n            const resultNomGame = await api.get(`https://api.twitch.tv/helix/games?id=${gameID}`)\n            //console.log(resultNomGame)\n            let nomJeu = resultNomGame.data.data.map(gameName => {\n                return gameName.name;\n            })\n            setInfoGame(nomJeu)\n            setInfoStream(result.data.data[0])\n        }\n        }\n        fetchData();\n    }, [slug])\n\n    return (\n        infoStream.title === \"Le streamer est Offline.\" ? \n        <div className=\"containerDecale\">\n            <ReactTwitchEmbedVideo height=\"650\" width=\"100%\" channel={slug}/>\n            <div className=\"contInfo\">\n                <div className=\"titreStream\">{infoStream.title}</div>\n            </div>\n        </div>\n\n        :\n\n        <div className=\"containerDecale\">\n            <ReactTwitchEmbedVideo height=\"650\" width=\"100%\" channel={slug}/>\n            <div className=\"contInfo\">\n                <div className=\"titreStream\">{infoStream.title}</div>\n                <div className=\"viewer\">Spectateurs : {infoStream.viewer_count}</div>\n                <div className=\"infogame\">Streamer : {infoStream.user_name} &nbsp; Langue : {infoStream.language}</div>\n                <div className=\"nomJeu\">Jeu : {infoGame}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Live;","import React, {useState, useEffect} from 'react';\nimport api from \"../../api\"\nimport {useLocation, useParams} from 'react-router-dom';\nimport {Link} from \"react-router-dom\";\n\nconst GameStreams = () => {\n\n    let location = useLocation();\n    //console.log(location)\n    let {slug} = useParams();\n\n    const [streamData, setStreamData] = useState([]);\n    const [viewers, setViewers] = useState(0);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await api.get(\n                `https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}`\n            );\n        let dataArray = result.data.data;\n        let finalArray = dataArray.map(stream => {\n            let newURL = stream.thumbnail_url.replace('{width}', \"320\").replace('{height}', \"180\");\n            stream.thumbnail_url = newURL;\n            return stream;\n\n        })\n\n        //calcul viewers\n        let totalViewers = finalArray.reduce((acc,val) => {\n            return acc + val.viewer_count;\n        }, 0);\n        let userIDs= dataArray.map(stream => {\n            return stream.user_id;\n        });\n\n        let baseUrl = \"https://api.twitch.tv/helix/users?\";\n        let queryParamsUsers = \"\";\n        userIDs.map(id => {\n            return (queryParamsUsers = queryParamsUsers + `id=${id}&`)\n        })\n        let finalUrl = baseUrl + queryParamsUsers;\n\n        let getUsersLogin = await api.get(finalUrl);\n        let userLoginArray = getUsersLogin.data.data;\n\n        finalArray = dataArray.map(stream => {\n            stream.login = \"\";\n            userLoginArray.forEach(login => {\n                if(stream.user_id === login.id) {\n                    stream.login = login.login;\n                }\n            })\n            return stream;\n        })\n        setViewers(totalViewers);\n        setStreamData(finalArray);\n    }\n    fetchData();\n    }, [])\n    return (\n        <div>\n            <h1 className=\"titreGamesStreams\">Streams : {slug}</h1>\n            <h3 className=\"sousTitreGameStreams\">\n                <strong className=\"textColored\">{viewers}</strong> personnes regardent {slug}\n            </h3>\n            <div className=\"flexAccueil\">\n                {streamData.map((stream,index) => (\n                    <div key={index} className=\"carteGameStreams\">\n<div className=\"bgCard\">\n                        <img src={stream.thumbnail_url} alt=\"game pic\" className=\"imgCarte\" />\n                        </div>\n                        <div className=\"cardBodyGameStreams\">\n                            <h5 className=\"titreCartesStream\">{stream.user_name}</h5>\n                            <p className=\"txtStream\">Nombre de viewers : {stream.viewer_count}</p>\n                            <Link className=\"link\" to={{pathname : `/live/${stream.login}`}}>\n                            <div className=\"btnCarte\">Regarder {stream.user_name}</div>\n                            </Link>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default GameStreams;","\nimport React from 'react';\n\n\nfunction Erreur(){\n\n\n    return(\n            <div className=\"containerDecaleResultats\">\n                <h4>Résultats de recherche: Pas de résultats, <br /> Vérifiez l'orthographe de votre saisie, ou ce streamer n'éxiste pas.</h4>\n            </div>\n    )\n}\n\nexport default Erreur;","\nimport React, {useState, useEffect} from 'react';\nimport api from '../../api';\nimport {Link, useParams} from 'react-router-dom';\nimport Erreur from '../Erreur/Erreur';\n\n\nfunction Resultats(){\n\n    let {slug} = useParams();\n\n    const [result, setResult] = useState(true);\n    const [streamerInfo, setStreamerInfo] = useState([]);\n\n    let cleanSearch = slug.replace(/ /g,'');\n\n    useEffect(() => {\n\n        const fetchData = async () => {\n\n            const result = await api.get(`https://api.twitch.tv/helix/users?login=${cleanSearch}`)\n            console.log(result);\n            \n            if(result.data.data.length === 0) {\n                setResult(false);\n            } else {\n                setStreamerInfo(result.data.data)\n            }\n\n        }\n        fetchData();\n\n    }, [cleanSearch])\n\n    return (\n\n        result ? \n        \n        <div>\n           \n            <div className=\"containerDecaleResultats\">\n                <h4>Résultats de recherche : </h4>\n\n                {streamerInfo.map((stream,index) => (\n\n                    <div key={index} className=\"carteResultats\">\n                        <div className=\"bgCardRond\">\n                        <img src={stream.profile_image_url} alt=\"resultat profile\" className=\"imgCarte\"/>\n                        </div>\n                        <div className=\"cardBodyResults\">\n                            <h5 className=\"titreCartesStream\">{stream.display_name}</h5>\n                            <div className=\"txtResult\">\n                                {stream.description}\n                            </div>\n\n                            <Link\n                            className=\"link\"\n                            to={{\n                                pathname: `/live/${stream.login}`\n                            }}\n                            >\n                                <div className=\"btnCarte btnResult\">Regarder {stream.display_name}</div>\n                            </Link>\n                        </div>\n                    </div>\n\n                ))}\n\n            </div>\n\n        </div> \n        :\n       <Erreur/>\n    )\n}\n\nexport default Resultats;","import \"./App.css\";\nimport Header from \"./Components/Header/Header.jsx\";\nimport Sidebar from \"./Components/Sidebar/Sidebar.jsx\";\nimport Games from \"./Components/Games/Games.jsx\";\nimport TopStream from \"./Components/TopStreams/TopStreams\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Live from \"./Components/Live/Live\";\nimport GameStreams from \"./Components/GameStreams/GameStreams\";\nimport Resultats from \"./Components/Resultats/Resultats\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Header />\n        <Sidebar />\n        <Switch>\n          <Route exact path=\"/\" component={Games} />\n          <Route exact path=\"/top-streams\" component={TopStream} />\n          <Route exact path=\"/live/:slug\" component={Live} />\n          <Route exact path=\"/game/:slug\" component={GameStreams} />\n          <Route exact path=\"/resultats/:slug\" component={Resultats} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}